if #panel.type == "timeseries" || #panel.type == "graph" {
    kind: "TimeSeriesChart"
    spec: {
        queries: [ for _, target in #panel.targets {
            kind: "TimeSeriesQuery"
            spec: {
                plugin: {
                    #target: target
                    %(conditional_timeserie_queries)
                }
            }
        }]
        legend: {
            if #panel.type == "timeseries" {
                position: #panel.options.legend.placement
            }
            if #panel.type == "graph" {
                if #panel.legend.rightSide {
                    position: "right"
                }
                if !#panel.legend.rightSide {
                    position: "bottom"
                }
            }
        }
        // mapping table for the `unit` attribute
        // TODO: factorize this for all panels?
        #unitMapping: {
            ms: "Milliseconds"
            s: "Seconds"
            m: "Minutes"
            h: "Hours"
            d: "Days"
            percent: "Percent"
            percentunit: "PercentDecimal"
            bytes: "Bytes"
            decbytes: "Bytes"
        }
        if #panel.fieldConfig.defaults.unit != _|_ if #unitMapping["\(#panel.fieldConfig.defaults.unit)"] != _|_ {
            unit: {
                kind: #unitMapping["\(#panel.fieldConfig.defaults.unit)"]
            }
        }
        if #panel.fieldConfig.defaults.thresholds != _|_ {
            thresholds: {
                //default_color:                                                       // TODO how to fill this field?
                steps: [ for _, step in #panel.fieldConfig.defaults.thresholds.steps if step.value != _|_ { // TODO how to manage the overrides part?
                    if step.value == null {
                        value: 0
                    }
                    if step.value != null {
                        value: step.value
                    }
                    color: step.color
                }]
            }
        }
    }
}
