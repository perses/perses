name: build_and_release
on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
jobs:
  build-frontend:
    name: "build-frontend"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version-file: "ui/.nvmrc"
      - uses: actions/cache@v3.0.8
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check Tag
        ## This step is verifying that the tag follow the semver
        ## It is only triggered when a tag is created
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/release.sh --check-version "${{ github.ref_name }}"

      - name: Check libraries version
        ## This step is verifying that the version of each package is matching the tag
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/ui_release.sh --check-package "${{ github.ref_name }}"

      - name: Install UI deps
        run: cd ./ui && npm install
      - name: Build the app and all packages
        run: cd ./ui && npm run build
      - name: store react production build
        uses: actions/upload-artifact@v3
        with:
          name: ui-libs
          path: |
            ui/**/dist
            !ui/node_modules

  libs-release:
    name: "libs-release"
    needs: "build-frontend"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version-file: "ui/.nvmrc"
          registry-url: "https://registry.npmjs.org"
      - name: Download react build
        uses: actions/download-artifact@v3
        with:
          name: ui-libs
          path: ui
      - name: Copy files before publishing libs
        run: ./scripts/ui_release.sh --copy
      - name: Publish dry-run libraries
        if: ${{ github.event_name == 'pull_request' || github.ref_name == 'main' }}
        run: ./scripts/ui_release.sh --publish dry-run
      - name: Publish libraries
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/ui_release.sh --publish
        env:
          # The setup-node action writes an .npmrc file with this env variable
          # as the placeholder for the auth token
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  go-build-and-release:
    name: "go and github release"
    needs: "build-frontend"
    runs-on: ubuntu-latest
    env:
      GORELEASER_PARALLEL: 1
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
      - uses: actions/cache@v3.0.8
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download react build
        uses: actions/download-artifact@v3
        with:
          name: ui-libs
          path: ui
      - name: Generate endpoints
        run: make generate
      - name: Extract Changelog
        run: ./scripts/release.sh --extract-changelog
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: install goreleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          install-only: true
      - name: Build Go binaries and docker images
        run: make cross-build
      - name: Publish Release and binaries
        ## This step will only run when a new tag is pushed.
        ## It will build the Go binaries and the docker images and then publish:
        ## - the Github release with the archive built
        ## - docker images on the different docker registry selected
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: make cross-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
